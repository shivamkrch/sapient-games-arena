{"version":3,"sources":["components/GameItem.jsx","components/Pagination.jsx","components/Games.jsx","App.js","serviceWorker.js","index.js"],"names":["GameItem","game","title","editors_choice","platform","release_year","genre","score","className","style","display","fontWeight","fontSize","split","map","g","i","key","Pagination","page","lastPage","onPageChange","aria-label","onClick","aria-hidden","Games","state","games","sortByScore","sortByPlatform","sortByYear","query","changePage","x","setState","onSearchQueryChange","e","target","value","onSortChange","name","checked","onSortValueChange","parseInt","JSON","parse","localStorage","getItem","this","console","log","fetch","then","res","json","setItem","stringify","filteredGames","filter","toString","toLowerCase","includes","sort","a","b","localeCompare","gameContent","Math","ceil","length","from","to","role","slice","type","placeholder","onChange","hidden","Component","App","textAlign","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d7fa32cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GameItem = ({\r\n  game: { title, editors_choice, platform, release_year, genre, score },\r\n}) => {\r\n  return (\r\n    <div className=\"card mb-2 shadow-sm\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <h6 className=\"card-subtitle mb-3 text-muted\">\r\n          <div className=\"badge badge-secondary p-1\">{release_year}</div>\r\n          {editors_choice === \"Y\" ? (\r\n            <div className=\"badge badge-success ml-2 p-1\">Editor's Choice</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </h6>\r\n\r\n        <div\r\n          className=\"mb-1 mr-2\"\r\n          style={{ display: \"inline\", fontWeight: \"bold\", fontSize: 20 }}\r\n        >\r\n          <i className=\"fas fa-star text-warning\"></i> {score}\r\n        </div>\r\n        <div className=\"badge badge-pill badge-primary m-2 p-2\">{platform}</div>\r\n        {genre.split(\",\").map((g, i) => (\r\n          <div key={i} className=\"badge badge-pill badge-danger m-2 p-2\">\r\n            {g}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameItem;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ page, lastPage, onPageChange }) => {\r\n  return (\r\n    <nav aria-label=\"Page navigation\" className=\"mt-3\">\r\n      <ul className=\"pagination justify-content-center\">\r\n        <li\r\n          className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}\r\n          title=\"Go to first page\"\r\n        >\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"First Page\"\r\n            onClick={() => onPageChange(-page + 1)}\r\n          >\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span className=\"sr-only\">First Page</span>\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}\r\n          title=\"Go to previous page\"\r\n        >\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Previous\"\r\n            onClick={() => onPageChange(-1)}\r\n          >\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </button>\r\n        </li>\r\n        <li className=\"page-item active\">\r\n          <span className=\"page-link d-none d-sm-block\">\r\n            Page {page} of {lastPage}\r\n          </span>\r\n          <span className=\"page-link d-sm-none\">{page}</span>\r\n        </li>\r\n        <li\r\n          className={`page-item ${page === lastPage ? \"disabled\" : \"\"}`}\r\n          title=\"Go to next page\"\r\n        >\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Next\"\r\n            onClick={() => onPageChange(1)}\r\n          >\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </button>\r\n        </li>\r\n        <li\r\n          className={`page-item ${page === lastPage ? \"disabled\" : \"\"}`}\r\n          title=\"Go to last page\"\r\n        >\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Last Page\"\r\n            onClick={() => onPageChange(lastPage - page)}\r\n          >\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span className=\"sr-only\">Last Page</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport GameItem from \"./GameItem\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass Games extends Component {\r\n  state = {\r\n    games: [],\r\n    page: 1,\r\n    sortByScore: 0,\r\n    sortByPlatform: 0,\r\n    sortByYear: 0,\r\n    query: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    let games = JSON.parse(localStorage.getItem(\"sapient_games\"));\r\n    if (games) {\r\n      this.setState({ games });\r\n      console.log(games[1]);\r\n      return;\r\n    }\r\n    fetch(\"/data/games.json\")\r\n      .then((res) => res.json())\r\n      .then((games) => {\r\n        this.setState({ games });\r\n        localStorage.setItem(\"sapient_games\", JSON.stringify(games));\r\n        console.log(games[1]);\r\n      });\r\n  }\r\n\r\n  changePage = (x) => {\r\n    this.setState({ page: this.state.page + x });\r\n  };\r\n\r\n  onSearchQueryChange = (e) => {\r\n    this.setState({ query: e.target.value, page: 1 });\r\n  };\r\n\r\n  onSortChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.checked ? 1 : 0 });\r\n  };\r\n\r\n  onSortValueChange = (e) => {\r\n    this.setState({ [e.target.name]: parseInt(e.target.value) });\r\n  };\r\n\r\n  render() {\r\n    let filteredGames = [...this.state.games];\r\n    if (this.state.query) {\r\n      filteredGames = filteredGames.filter((game) =>\r\n        game.title\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(this.state.query.toLowerCase())\r\n      );\r\n    }\r\n    filteredGames.sort((a, b) => this.state.sortByScore * (b.score - a.score));\r\n    filteredGames.sort(\r\n      (a, b) => this.state.sortByYear * (b.release_year - a.release_year)\r\n    );\r\n    filteredGames.sort(\r\n      (a, b) => this.state.sortByPlatform * b.platform.localeCompare(a.platform)\r\n    );\r\n    const page = this.state.page;\r\n    const lastPage = Math.ceil(filteredGames.length / 20);\r\n    const from = 20 * (page - 1) + 1,\r\n      to = 20 * page;\r\n    let gameContent;\r\n    if (page > lastPage || page < 1) {\r\n      gameContent = (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <strong>Invalid page number!</strong> Please try again!\r\n        </div>\r\n      );\r\n    } else if (filteredGames.length) {\r\n      gameContent = filteredGames\r\n        .slice(from - 1, to)\r\n        .map((game, i) => <GameItem key={i} game={game} />);\r\n    } else {\r\n      gameContent = (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <strong>No games found!</strong> Please try again!\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container px-0\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-3\"\r\n          placeholder=\"Search by name...\"\r\n          value={this.state.query}\r\n          onChange={this.onSearchQueryChange}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 mt-2\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"sortByScore\"\r\n                  checked={this.state.sortByScore}\r\n                  onChange={this.onSortChange}\r\n                />\r\n                Sort by Score\r\n              </label>\r\n              <select\r\n                className=\"ml-2 form-control form-control-sm\"\r\n                name=\"sortByScore\"\r\n                value={this.state.sortByScore}\r\n                onChange={this.onSortValueChange}\r\n                hidden={!this.state.sortByScore}\r\n              >\r\n                <option value=\"-1\">Lowest First</option>\r\n                <option value=\"1\">Highest First</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 mt-2\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"sortByPlatform\"\r\n                  checked={!!this.state.sortByPlatform}\r\n                  onChange={this.onSortChange}\r\n                />\r\n                Sort by Platform\r\n              </label>\r\n              <select\r\n                className=\"ml-2 form-control form-control-sm\"\r\n                name=\"sortByPlatform\"\r\n                value={this.state.sortByPlatform}\r\n                onChange={this.onSortValueChange}\r\n                hidden={!this.state.sortByPlatform}\r\n              >\r\n                <option value=\"-1\">A-Z</option>\r\n                <option value=\"1\">Z-A</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 mt-2\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"sortByYear\"\r\n                  checked={!!this.state.sortByYear}\r\n                  onChange={this.onSortChange}\r\n                />\r\n                Sort by Year\r\n              </label>\r\n              <select\r\n                className=\"ml-2 form-control form-control-sm\"\r\n                name=\"sortByYear\"\r\n                value={this.state.sortByYear}\r\n                onChange={this.onSortValueChange}\r\n                hidden={!this.state.sortByYear}\r\n              >\r\n                <option value=\"-1\">Oldest First</option>\r\n                <option value=\"1\">Latest First</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Pagination\r\n          page={page}\r\n          lastPage={lastPage}\r\n          onPageChange={this.changePage}\r\n        />\r\n        <p className=\"text-center\">\r\n          Showing <b>{from}</b>-\r\n          <b>{page === lastPage ? filteredGames.length : to}</b> of{\" \"}\r\n          <b>{filteredGames.length}</b>\r\n        </p>\r\n        <div className=\"container-fluid px-0 my-4\">{gameContent}</div>\r\n        <Pagination\r\n          page={page}\r\n          lastPage={lastPage}\r\n          onPageChange={this.changePage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Games from \"./components/Games\";\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid p-3 mt-2 bg-light\">\n      <header className=\"App-header mb-3\">\n        <h3 style={{ textAlign: \"center\" }}>Sapient Games Arena</h3>\n      </header>\n      <Games />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}